package com.virtusa.bankingapp.dao;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import java.util.stream.Stream;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DynamicTest;
import org.junit.jupiter.api.TestFactory;
import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.hasSize;
import com.virtusa.bankingapp.models.Customer;

public class CustomerFacadeTest {
	private CustomerFacade customerFacade;
	
	
	@BeforeEach
	public void instantiateCustomerFacade() {
		customerFacade = new CustomerImpl();
	}
	
	@TestFactory
	Stream<DynamicTest> dynamicTestsForCustomerWorkflows() {
		//initialized the collection
	   customerFacade.addCustomers();
	        
	   List<Customer> inputList =customerFacade.getAllCustomers();
	    //dynamic test
	    Stream<DynamicTest> saveCustomerStream = inputList.stream()
	      .map(cust -> DynamicTest.dynamicTest(
	        "saveCustomer: " + cust.toString(), 
	          () -> {
	              Customer returned = customerFacade.addCustomer(cust);
	              assertEquals(returned.getCustomerId(), cust.getCustomerId());
	          }
	    ));
	        
	 
	    //dynamic test result    
	    return saveCustomerStream;
	}
	
	@TestFactory
	Iterator<DynamicTest> dynamicTestsWithIterator() {
		customerFacade.addCustomers();
	    return Arrays.asList(
	      DynamicTest.dynamicTest("Get All Customers",
	        () -> assertThat(customerFacade.getAllCustomers(),hasSize(4))),
	      DynamicTest.dynamicTest("Get Customer ById",
	        () -> assertNotNull(customerFacade.getCustomerById(0))))
	        .iterator();
	}

}
