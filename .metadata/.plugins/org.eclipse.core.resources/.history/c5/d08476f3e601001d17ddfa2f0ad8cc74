package com.virtusa.bankingapp.dao;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import java.util.stream.Stream;

import org.junit.jupiter.api.DynamicTest;
import org.junit.jupiter.api.TestFactory;

import com.virtusa.bankingapp.models.Customer;

public class CustomerFacadeTest {
	private CustomerFacade customerFacade;
	
	
	@TestFactory
	Stream<DynamicTest> dynamicTestsForCustomerWorkflows() {
		//initialized the collection
	    List<Customer> inputList = Arrays.asList(
	    		new Customer(new Random().nextInt(10000),
	    				"Parameswari1","Bala1",LocalDate.of(2000+new Random().nextInt(20),
	    						1+new Random().nextInt(10), 
	    						1+new Random().nextInt(25)),true),
	    		new Customer(new Random().nextInt(10000),
	    				"Parameswari2","Bala2",LocalDate.of(2000+new Random().nextInt(20),
	    						1+new Random().nextInt(10), 
	    						1+new Random().nextInt(25)),true),
	    		new Customer(new Random().nextInt(10000),
	    				"Parameswari3","Bala3",LocalDate.of(2000+new Random().nextInt(20),
	    						1+new Random().nextInt(10), 
	    						1+new Random().nextInt(25)),true),
	    		new Customer(new Random().nextInt(10000),
	    				"Parameswari4","Bala4",LocalDate.of(2000+new Random().nextInt(20),
	    						1+new Random().nextInt(10), 
	    						1+new Random().nextInt(25)),true)
	    		);
	        
	    customerFacade = new CustomerImpl();
	    //dynamic test
	    Stream<DynamicTest> saveCustomerStream = inputList.stream()
	      .map(cust -> DynamicTest.dynamicTest(
	        "saveCustomer: " + cust.toString(), 
	          () -> {
	              Customer returned = customerFacade.addCustomer(cust);
	              assertEquals(returned.getCustomerId(), cust.getCustomerId());
	          }
	    ));
	        
	 
	    //dynamic test result    
	    return saveCustomerStream;
	}
	
	@TestFactory
	Iterator<DynamicTest> dynamicTestsWithIterator() {
	    return Arrays.asList(
	      DynamicTest.dynamicTest("Add test",
	        () -> assertEquals(2, Math.addExact(1, 1))),
	      DynamicTest.dynamicTest("Multiply Test",
	        () -> assertEquals(4, Math.multiplyExact(2, 2))))
	        .iterator();
	}

}
